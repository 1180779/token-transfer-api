services:

  db:
    image: postgres:15
    ports:
      - "5434:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: runner
    ports:
      - "8080:8080"
    environment:
      DATABASE_URL: ${DATABASE_URL}
    depends_on:
      db:
          condition: service_healthy

  test-db:
    image: postgres:15
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_TEST_USER}
      POSTGRES_PASSWORD: ${POSTGRES_TEST_PASSWORD}
      POSTGRES_DB: ${POSTGRES_TEST_DB}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_TEST_USER} -d ${POSTGRES_TEST_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 5

  tester:
    build:
      context: .
      dockerfile: Dockerfile
      target: builder
    environment:
      DATABASE_URL: ${DATABASE_TEST_URL}
    depends_on:
      test-db:
        condition: service_healthy
    volumes:
      - .:/app
      - go_module_cache:/go/pkg/mod
    command: tail -f /dev/null

volumes:
  postgres_data:
  go_module_cache:
